(function(){const m=document.createElement("link").relList;if(m&&m.supports&&m.supports("modulepreload"))return;for(const e of document.querySelectorAll('link[rel="modulepreload"]'))d(e);new MutationObserver(e=>{for(const n of e)if(n.type==="childList")for(const u of n.addedNodes)u.tagName==="LINK"&&u.rel==="modulepreload"&&d(u)}).observe(document,{childList:!0,subtree:!0});function c(e){const n={};return e.integrity&&(n.integrity=e.integrity),e.referrerpolicy&&(n.referrerPolicy=e.referrerpolicy),e.crossorigin==="use-credentials"?n.credentials="include":e.crossorigin==="anonymous"?n.credentials="omit":n.credentials="same-origin",n}function d(e){if(e.ep)return;e.ep=!0;const n=c(e);fetch(e.href,n)}})();function y(r){throw new Error('Could not dynamically require "'+r+'". Please configure the dynamicRequireTargets or/and ignoreDynamicRequires option of @rollup/plugin-commonjs appropriately for this require call to work.')}var L={},C={get exports(){return L},set exports(r){L=r}};(function(r,m){(function(c){r.exports=c()})(function(){return function c(d,e,n){function u(o,i){if(!e[o]){if(!d[o]){var b=typeof y=="function"&&y;if(!i&&b)return b(o,!0);if(f)return f(o,!0);var p=new Error("Cannot find module '"+o+"'");throw p.code="MODULE_NOT_FOUND",p}var t=e[o]={exports:{}};d[o][0].call(t.exports,function(a){return u(d[o][1][a]||a)},t,t.exports,c,d,e,n)}return e[o].exports}for(var f=typeof y=="function"&&y,s=0;s<n.length;s++)u(n[s]);return u}({1:[function(c,d,e){Object.defineProperty(e,"__esModule",{value:!0}),e.create=e.visible=void 0;var n=function(s){var o=arguments.length>1&&arguments[1]!==void 0&&arguments[1],i=document.createElement("div");return i.innerHTML=s.trim(),o===!0?i.children:i.firstChild},u=function(s,o){var i=s.children;return i.length===1&&i[0].tagName===o},f=function(s){return(s=s||document.querySelector(".basicLightbox"))!=null&&s.ownerDocument.body.contains(s)===!0};e.visible=f,e.create=function(s,o){var i=function(t,a){var l=n(`
		<div class="basicLightbox `.concat(a.className,`">
			<div class="basicLightbox__placeholder" role="dialog"></div>
		</div>
	`)),h=l.querySelector(".basicLightbox__placeholder");t.forEach(function(q){return h.appendChild(q)});var E=u(h,"IMG"),O=u(h,"VIDEO"),N=u(h,"IFRAME");return E===!0&&l.classList.add("basicLightbox--img"),O===!0&&l.classList.add("basicLightbox--video"),N===!0&&l.classList.add("basicLightbox--iframe"),l}(s=function(t){var a=typeof t=="string",l=t instanceof HTMLElement==1;if(a===!1&&l===!1)throw new Error("Content must be a DOM element/node or string");return a===!0?Array.from(n(t,!0)):t.tagName==="TEMPLATE"?[t.content.cloneNode(!0)]:Array.from(t.children)}(s),o=function(){var t=arguments.length>0&&arguments[0]!==void 0?arguments[0]:{};if((t=Object.assign({},t)).closable==null&&(t.closable=!0),t.className==null&&(t.className=""),t.onShow==null&&(t.onShow=function(){}),t.onClose==null&&(t.onClose=function(){}),typeof t.closable!="boolean")throw new Error("Property `closable` must be a boolean");if(typeof t.className!="string")throw new Error("Property `className` must be a string");if(typeof t.onShow!="function")throw new Error("Property `onShow` must be a function");if(typeof t.onClose!="function")throw new Error("Property `onClose` must be a function");return t}(o)),b=function(t){return o.onClose(p)!==!1&&function(a,l){return a.classList.remove("basicLightbox--visible"),setTimeout(function(){return f(a)===!1||a.parentElement.removeChild(a),l()},410),!0}(i,function(){if(typeof t=="function")return t(p)})};o.closable===!0&&i.addEventListener("click",function(t){t.target===i&&b()});var p={element:function(){return i},visible:function(){return f(i)},show:function(t){return o.onShow(p)!==!1&&function(a,l){return document.body.appendChild(a),setTimeout(function(){requestAnimationFrame(function(){return a.classList.add("basicLightbox--visible"),l()})},10),!0}(i,function(){if(typeof t=="function")return t(p)})},close:b};return p}},{}]},{},[1])(1)})})(C);const D=document.querySelector(".btn-add"),x=document.querySelector(".input-js"),w=document.querySelector(".todo-list"),g="todo";M();D.addEventListener("click",I);function T(r){return{id:Date.now(),status:"todo",textDone:r}}function S({id:r,status:m,textDone:c}){return`<li class="${m} id="${r}">${c}
    <button class="btn-update"></button>
    </li>`}function I(){const r=x.value.trim();if(x.value="",!r){alert("Please enter input");return}const m=T(r);w.insertAdjacentHTML("beforeend",S(m));const c=JSON.parse(localStorage.getItem(g))||[];c.push(m),localStorage.setItem(g,JSON.stringify(c))}function M(){const r=JSON.parse(localStorage.getItem(g));r&&(w.innerHTML=r.map(S).join(""))}w.addEventListener("click",_);let v=null;function _(r){if(r.target.classList.contains("btn-update")){let n=function(u){const f=c.value.trim();if(console.log(f),!f)return;const o=JSON.parse(localStorage.getItem(g)).map(i=>(i.id===+u.target.id&&(i.textDone=f),i));localStorage.setItem(g,JSON.stringify(o)),v.close()};var m=n;v=L.create(`<div class="modal-container">
    <button type="button" class="btn-close-modal">X</button>
    <input type="text" class="input-modal"/>
    <button type="button" class="btn-update-modal" id="${r.target.parentNode.id}">Update todo</button>
    </div>`,{closable:!1}),v.show();const c=document.querySelector(".input-modal"),d=document.querySelector(".btn-update-modal");document.querySelector(".btn-close-modal").addEventListener("click",()=>v.close()),d.addEventListener("click",n)}}
